;; Copyright (c) 2022, "the Phoeron" Colin J.E. Lupton <thephoeron@protonmail.com>
;; Released under the MIT License. See open-blackfire/LICENSE for more information.

(in-package :open-blackfire/quantum-cloud/ibm-quantum)

(defclass program-spec ()
  ((backend-requirements :initarg :backend-requirements :json-type :string :json-key "backend_requirements")
   (parameters :initarg :parameters :json-type :string :json-key "parameters")
   (return-values :initarg :return-values :json-type :string :json-key "return_values")
   (interim-results :initarg :interim-results :json-type :string :json-key "interim_results"))
  (:metaclass json-serializable-class)
  (:documentation "Program information relevant to running a program."))

(defclass program-create ()
  ((name :initarg :name :json-type :string :json-key "name")
   (cost :initarg :cost :json-type :number :json-key "cost")
   (description :initarg :description :json-type :string :json-key "description")
   (spec :initarg :spec :json-type program-spec :json-key "spec")
   (public-p :initarg :public-p :json-type :bool :json-key "is_public")
   (data :initarg :data :json-type :string :json-key "data"))
  (:metaclass json-serializable-class)
  (:documentation "Create program data as request object."))

(defclass program-response ()
  ((name :initarg :name :json-type :string :json-key "name")
   (cost :initarg :cost :json-type :number :json-key "cost")
   (description :initarg :description :json-type :string :json-key "description")
   (spec :initarg :spec :json-type program-spec :json-key "spec")
   (public-p :initarg :public-p :json-type :bool :json-key "is_public")
   (id :initarg :id :json-type :string :json-key "id")
   (data :initarg :data :json-type :string :json-key "data")
   (creation-date :initarg :creation-date :json-type :string :json-key "creation_date")
   (update-date :initarg :update-date :json-type :string :json-key "update_date"))
  (:metaclass json-serializable-class)
  (:documentation "Program response object."))

(defclass programs-response ()
  ((programs :initarg :programs :json-key "programs" :json-type (:list program-response))
   (count :initarg :count :json-type :number :json-key "count")
   (offset :initarg :offset :json-type :number :json-key "offset")
   (limit :initarg :limit :json-type :number :json-key "limit"))
  (:metaclass json-serializable-class)
  (:documentation "Program response collection object."))

(defclass program-metadata ()
  ((name :initarg :name :json-type :string :json-key "name")
   (cost :initarg :cost :json-type :number :json-key "cost")
   (description :initarg :description :json-type :string :json-key "description")
   (spec :initarg :spec :json-type :string :json-key "spec")
   (public-p :initarg :public-p :json-type :bool :json-key "is_public"))
  (:metaclass json-serializable-class)
  (:documentation "Program metadata object."))

(defclass program-update ()
  ((name :initarg :name :json-type :string :json-key "name")
   (cost :initarg :cost :json-type :number :json-key "cost")
   (description :initarg :description :json-type :string :json-key "description")
   (spec :initarg :spec :json-type :string :json-key "spec"))
  (:metaclass json-serializable-class)
  (:documentation "Program update request object."))

(defclass job-run-params ()
  ((program-id :initarg :program-id :json-type :string :json-key "program_id")
   (hub :initarg :hub :json-type :string :json-key "hub")
   (group :initarg :group :json-type :string :json-key "group")
   (project :initarg :project :json-type :string :json-key "project")
   (backend :initarg :backend :json-type :string :json-key "backend")
   (params :initarg :params :json-type :string :json-key "params")
   (runtime :initarg :runtime :json-type :string :json-key "runtime")
   (log-level :initarg :log-level :json-type :string :json-key "log_level"))
  (:metaclass json-serializable-class)
  (:documentation "Parameters used to run a job."))

(defclass job-response ()
  ((id :initarg :id :json-type :string :json-key "id")
   (hub :initarg :hub :json-type :string :json-key "hub")
   (group :initarg :group :json-type :string :json-key "group")
   (project :initarg :project :json-type :string :json-key "project")
   (backend :initarg :backend :json-type :string :json-key "backend")
   (state :initarg :state :json-key "state" :json-type job-state)
   (status :initarg :status :json-key "status" :json-type job-status)
   (params :initarg :params :json-type :string :json-key "params")
   (program :initarg :program :json-type :string :json-key "program")
   (created :initarg :created :json-type :string :json-key "created")
   (runtime :initarg :runtime :json-type :string :json-key "runtime"))
  (:metaclass json-serializable-class)
  (:documentation "Job response object."))

(defclass job-create-response ()
  ((id :initarg :id :json-type :string :json-key "id"))
  (:metaclass json-serializable-class)
  (:documentation "Job creation response object."))

(defclass jobs-response ()
  ((jobs :initarg :jobs :json-key "jobs" :json-type (:list job-response))
   (count :initarg :count :json-type :number :json-key "count")
   (offset :initarg :offset :json-type :number :json-key "offset")
   (limit :initarg :limit :json-type :number :json-key "limit"))
  (:metaclass json-serializable-class)
  (:documentation "Job collection response object."))

;; Replace this with a member type
(defclass job-status ()
  ()
  (:metaclass json-serializable-class)
  (:documentation "Job status object."))

(defclass job-state ()
  ((status :initarg :status :json-type :string :json-key "status")
   (reason :initarg :reason :json-type :string :json-key "reason"))
  (:metaclass json-serializable-class)
  (:documentation "Current state of the job."))

(defclass error-response ()
  ((code :initarg :code :json-type :string :json-key "code")
   (message :initarg :message :json-type :string :json-key "message")
   (more-info :initarg :more-info :json-type :string :json-key "more_info"))
  (:metaclass json-serializable-class)
  (:documentation "Error response object."))

(defclass error-container ()
  ((trace :initarg :trace :json-type :string :json-key "trace")
   (errors :initarg :errors :json-type (:list error-response) :json-key "errors"))
  (:metaclass json-serializable-class)
  (:documentation "Error collection response object."))

(defclass devices-response ()
  ((devices :initarg :devices :json-type (:list :string) :json-key "devices"))
  (:metaclass json-serializable-class)
  (:documentation "Device response object."))

(defclass device-properties-response ()
  ()
  (:metaclass json-serializable-class)
  (:documentation "Device properties response object."))

(defclass device-configuration-response ()
  ()
  (:metaclass json-serializable-class)
  (:documentation "Device configuration response object."))

(defclass device-defaults-response ()
  ()
  (:metaclass json-serializable-class)
  (:documentation "Device defaults response object."))

(defclass device-status-response ()
  ((state :initarg :state :json-type :bool :json-key "state")
   (status :initarg :status :json-type :string :json-key "status")
   (message :initarg :message :json-type :string :json-key "message")
   (length-queue :initarg :length-queue :json-type :number :json-key "length_queue")
   (backend-version :initarg :backend-version :json-type :string :json-key "backend_version"))
  (:metaclass json-serializable-class)
  (:documentation "Device status response object."))
